@use '../common/variables' as vars;
@use '../common/ui' as ui;
@use '../mixins/mixins' as mx;
@use '../mixins/header-nav' as nav;


// vars
$hideDuration: 150ms;
$showDuration: 300ms;


// mixins
@mixin transform($transformation, $duration) {
  -webkit-transform: $transformation;
  transform: $transformation;
  transition:
    transform
    $duration
    ease-in-out;
  will-change: transform;
}


// components
.mobile-menu {
  background-color: vars.$black;
  color: vars.$almostWhite;
  display: inline-block;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 2;

  // slide left
  @include transform(translateX(-100%), $hideDuration);

  &.visible {
    // slide right
    @include transform(translateX(0), $showDuration);
  }

  @media #{ vars.$mqTablet } {
    display: none;
    // TODO: hide menu in js if breakpoint changes (#95)
  }

  // TODO: should this be in src/styles/components/_header.scss
  .site-title {
    padding: 20px 0;
    text-align: center;

    .title-link {
      @include ui.headingBase();
      color: vars.$almostWhite;
      font-size: 20pt;
      line-height: 1;
      text-decoration: none;

      &:hover {
        color: vars.$main;
      }

      &.focus-visible {
        @include ui.focusOutline();
      }
    }

    .description-text {
      display: none;
    }
  }

  .close-mobile-menu-button {
    position: absolute;
    background-color: transparent;
    border: none;
    padding: 10px;
    top: 15px;
    right: 15px;

    .icon {
      width: 15px;
      height: 15px;
      display: inline-block;
    }
    .label {
      @include mx.visuallyHidden();
    }
  }

  @include nav.searchAndLangSwitch();
}

.overlay {
  position: absolute;
  background-color: rgba(vars.$black, 0.75);
  height: 100%;
  left: 0;
  opacity: 0;
  top: 0;
  width: 100%;
  z-index: 1;

  $blurSize: 10px;
  -webkit-backdrop-filter: blur($blurSize);
  backdrop-filter: blur($blurSize);

  opacity: 0;
  visibility: hidden;

  -webkit-transition:
    visibility $hideDuration,
    opacity $hideDuration linear;
  transition:
    visibility $hideDuration,
    opacity $hideDuration linear;

  &.visible {
    opacity: 1;
    visibility: visible;

    -webkit-transition:
      visibility 0ms,
      opacity $showDuration linear;
    transition:
      visibility 0ms,
      opacity $showDuration linear;
  }
}
