{% extends "layouts/pieceDetailsLayout.njk" %}


{%- from 'macros/banner-ad.njk' import inContextLeaderboard, mobileBannerAds -%}
{%- from 'macros/content-section.njk' import contentSection -%}
{%- from 'macros/cta.njk' import externalCTA -%}
{%- from 'macros/hero-image.njk' import heroImage -%}
{%- from 'macros/metadata.njk' import articleMetaData -%}
{%- from 'macros/piece-details.njk' import relatedAcademicPrograms, relatedEvents, relatedMedia, relatedOrganizations, relatedPieces, tags -%}
{%- from 'macros/piece-link-list.njk' import pieceLinkList -%}


{%- set locale = apos.aemI18n.getSanitizedLocale(data) -%}
{%- set isAdmin = apos.aemUsers.isUserAdmin(data.user) -%}
{%- set piece = data.piece -%}
{%- set authors = apos.aemAuthors.getArrayFromArticle(piece) -%}
{%- set mainLBOptions = { data: data, propName: 'articlesLeaderboard' } -%}
{%- set minorLBOptions = { data: data, propName: 'articlesMinorLeaderboard' } -%}
{%- set isMainLBVisible = apos.aemBannerAds.areVisible(mainLBOptions) -%}
{%- set isMinorLBVisible = apos.aemBannerAds.areVisible(minorLBOptions) -%}
{%- set bannerPropNames = ['articlesSidebarBanners1', 'articlesSidebarBanners2', 'articlesSidebarBanners3'] -%}


{% block title %}
  {%-
    set seoTitle = apos.aemSeo.buildArticleTitle(
      piece,
      {
        i18n: __,
        replace: apos.aemI18n.replace,
        authors: authors,
        citationPublication: piece.citationPublication,
        type: __('articles|plural'),
        category: data.page.title
      }
    )
  -%}
  {{ seoTitle }}
{% endblock %}

{% block metadata %}
  {%- set author = apos.aemAuthors.getListFromArticle(piece) -%}
  {{
    articleMetaData({
      title: piece.title,
      authors: apos.aemAuthors.getArrayFromArticle(piece),
      publicationName: piece.citationPublication,
      publicationDate: apos.aemPieces.getISODate(piece),
      description: piece.shortDescription,

      heroImage: piece.heroImage,
      isUsingRemoteImage: piece.isUsingRemoteImage,
      remoteImageLocation: piece.remoteImageLocation,
      remoteImageAltText: piece.remoteImageAltText,
      remoteImageCaption: piece.remoteImageCaption,
      remoteImageLocation: piece.remoteImageLocation,
      remoteImageSource: piece.remoteImageSource,

      section: apos.aemPieces.getArticleSection(__, piece),
      url: piece._url,
      baseUrl: apos.aemUtils.ensureHTTPS(data.baseUrl),
      tags: piece.tags,
      locale: locale
    })
  }}
{% endblock %}

{% block mainAdditionalClasses %}article-details{% endblock %}

{% block subheading %}
  <div class="subheading">
    <h2 class="sr-only">{{ __('pieceDetails|authorsLabel') }}</h2>

    {%- if piece.originalTitle -%}
      <p class="piece-original-title">
        {{
          apos.aemI18n.replace(
            __('articles|originalTitleLabel'),
            [{ pattern: '%s', str: piece.originalTitle }]
          )
        }}
      </p>
    {%- endif -%}

    {{ pieceLinkList(piece._originalAuthor, { isAdmin: isAdmin }) }}

    {%- if piece.citationPublication -%}
      <p class="publication-name">{{ piece.citationPublication }}</p>
    {%- endif -%}

    <p class="publication-date">{{ apos.aemDates.format(piece.publicationDate, locale) }}</p>

    {%- if piece.isPrivate -%}
      <div class="private">
        <div class="message">{{ __('articles|privateLabel') }}</div>
      </div>
    {%- endif -%}

    {%- if piece.isSponsored -%}
      <div class="sponsored-tag">
        <div class="tag">{{ __('articles|sponsored') }}</div>
      </div>
    {%- endif -%}
  </div>
{% endblock %}

{% block advertisementBeforeMain %}
  {%- if isMainLBVisible -%}
    {{ inContextLeaderboard(mainLBOptions, { location: 'before' }) }}
  {%- endif -%}
{% endblock %}

{% block pageContent %}
  {%- set bannerIndex = 0 -%}

  {{
    heroImage(
      piece,
      {
        hasCaption: true,
        isEditable: apos.aemUtils.isDraftMode(data)
      }
    )
  }}

  <div class="description rich-description">
    {{ contentSection(piece) }}
  </div>

  {%- if bannerIndex < bannerPropNames|length -%}
    {{
      mobileBannerAds({
        data: data,
        propName: bannerPropNames[bannerIndex]
      })
    }}
    {%- set bannerIndex = bannerIndex + 1 -%}
  {%- endif -%}

  {%- set isMention = piece.articleType === 'mention' -%}
  {%- if isMention or piece.externalLink -%}
    <div class="mention">
      {{
        externalCTA({
          label: __('articles|readFullArticle'),
          ariaLabel: __('articles|readFullArticle') + ' - ' + piece.title,
          url: piece.externalLink,
          isSponsored: piece.isSponsored
        })
      }}
      {%- if isMention -%}
        <p class="mention-notes">{{ __('articles|notOriginallyPublishedHere') }}</p>
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- if isMinorLBVisible -%}
    {{ inContextLeaderboard(minorLBOptions, {}) }}
  {%- endif -%}

  <hr class="separator"/>

  <dl class="piece-props-list">
    {%-
      set isSameLocale = apos.aemI18n.isSameLocale(
        piece.originalLang,
        locale,
        { emptyAsTrue: true }
      )
    -%}
    {%- if not isSameLocale -%}
      <dt>{{ __('pieceDetails|originalLanguageLabel') }}</dt>
      {%- set originalLang = apos.aemI18n.getLanguagesFrom(piece.originalLang, locale) -%}
      <dd>{{ originalLang }}</dd>
    {%- endif -%}

    {%- if piece.isTranslation -%}
      <dt>{{ __('pieceDetails|translatorLabel') }}</dt>
      <dd>{{ pieceLinkList(piece._translator) }}</dd>
    {%- endif -%}
  </dl>

  {# projets #}
  {{ relatedPieces(__('projects|related'), piece._relatedProjects) }}

  {# articles #}
  {%- set relatedArticles = apos.aemArrays.merge(piece._relatedArticles, piece._articles) -%}
  {{
    relatedPieces(
      __('articles|related'),
      relatedArticles,
      { isAdmin: isAdmin }
    )
  }}

  {# books #}
  {{ relatedPieces(__('books|related'), piece._relatedBooks) }}

  {# media #}
  {{ relatedMedia(piece._relatedMedia) }}

  {# events #}
  {{ relatedEvents(piece._relatedEvents) }}

  {# people #}
  {{
    relatedPieces(
      __('people|related'),
      piece._relatedPeople,
      { isAdmin: isAdmin }
    )
  }}

  {# organizations #}
  {{ relatedOrganizations(piece._relatedOrganizations) }}

  {# academic programs #}
  {{ relatedAcademicPrograms(piece._relatedEducation, { i18n: __ }) }}

  {# tags #}
  {{ tags(piece) }}

  {%- if bannerIndex < bannerPropNames|length -%}
    {{
      mobileBannerAds({
        data: data,
        propName: bannerPropNames[bannerIndex]
      })
    }}
    {%- set bannerIndex = bannerIndex + 1 -%}
  {%- endif -%}

  {%- if piece.hasCitations and piece.citations -%}
    <hr class="separator"/>
    {%- include 'partials/articles/citations-section.njk' -%}
  {%- endif -%}

  {%- if bannerIndex < bannerPropNames|length -%}
    {{
      mobileBannerAds({
        data: data,
        propName: bannerPropNames[bannerIndex]
      })
    }}
  {%- endif -%}

  {%- if isMainLBVisible -%}
    {{ inContextLeaderboard(mainLBOptions, { location: 'after' }) }}
  {%- endif -%}
{% endblock %}

{% block sidebar %}
  {% include "partials/articles/sidebar.njk" %}
{% endblock %}
